-- This script implements an obfuscation mechanism for Lua code.
-- Creator: Arif Rahman
-- Copyright (c) 2025 Arif Rahman. All rights reserved.
return [===[local function ___()
	local c[1], c[2], c[3]
	local collectgarbage, getmetatable, setmetatable, coroutine, _VERSION, loadfile, tostring, tonumber, rawequal, package, require, xpcall, ipairs, dofile, string, rawset, rawlen, assert, select, rawget, print, pcall, debug, bit32, pairs, error, table, type, next, utf8, math, load, arg, os, io, _G = collectgarbage, getmetatable, setmetatable, coroutine, _VERSION, loadfile, tostring, tonumber, rawequal, package, require, xpcall, ipairs, dofile, string, rawset, rawlen, assert, select, rawget, print, pcall, debug, bit32, pairs, error, table, type, next, utf8, math, load, arg, os, io, _G
	local c[4] = {}
	local c[5] = {}
	local c[6] = {}
	local c[7] = {}
	local c[8] = {}
	local c[9] = 1
	local c[10] = {}
	local c[11] = function(m)
		local r = ''
		for i = 1, #m do
			r = r .. c[4][(m[i]) + 1]
		end
		return r
	end
	c[10][1] = function(...)
		local n = {...}
		for i, v in n[4], n[1], nil do
			n[3] = n[3] .. c[4][v + 1]
		end
		return n[3]
	end
	c[10][2] = function(...)
		local n = {...}
		return n[1][1]:gsub("..", function(h)
			return c[4][((tonumber(h, 16) + 256 - 13 + 999999 * 256) % 256) + 1]
		end)
	end
	c[1] = function(s)
		local m = s
		local v = m[#m - 1]
		local k = m[#m]
		m[#m - 1], m[#m] = nil, nil
		if not c[5][v] then
			c[5][v] = c[10][c[9]](m, k, '', next)
		end
		return c[5][v]
	end
	if not c[2] then
		c[2] = c[8]
	end
	return -- content()
end
return ___()]===]